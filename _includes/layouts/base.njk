<!doctype html>
<html lang="{{ metadata.language }}">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>{{ title or metadata.title }}</title>
		<meta name="description" content="{{ description or metadata.description }}">

		{#- Atom and JSON feeds included by default #}
		<link rel="alternate" href="/feed/feed.xml" type="application/atom+xml" title="{{ metadata.title }}">
		<link rel="alternate" href="/feed/feed.json" type="application/json" title="{{ metadata.title }}">

		{#- Uncomment this if youâ€™d like folks to know that you used Eleventy to build your site!  #}
		{#- <meta name="generator" content="{{ eleventy.generator }}"> #}

		{#-
		CSS bundles are provided via the `eleventy-plugin-bundle` plugin:
		1. You can add to them using `{% css %}`
		2. You can get from them using `{% getBundle "css" %}` or `{% getBundleFileUrl "css" %}`
		3. You can do the same for JS: {% js %}{% endjs %} and <script>{% getBundle "js" %}</script>
		4. Learn more: https://github.com/11ty/eleventy-plugin-bundle
		#}

		{#- Add an arbitrary string to the bundle #}
		{%- css %}* { box-sizing: border-box; }{% endcss %}
		{#- Add the contents of a file to the bundle #}
		{%- css %}{% include "public/css/index.css" %}{% endcss %}
		{#- Or add from node_modules #}
		{# {%- css %}{% include "node_modules/prismjs/themes/prism-okaidia.css" %}{% endcss %} #}

		{#- Render the CSS bundle using Inlined CSS (for the fastest site performance in production) #}
		<style>{% getBundle "css" %}</style>
		{#- Renders the CSS bundle using a separate file, if you can't set CSP directive style-src: 'unsafe-inline' #}
		{#- <link rel="stylesheet" href="{% getBundleFileUrl "css" %}"> #}
	</head>
	<body>
		<a href="#skip" class="visually-hidden">Skip to main content</a>

		<header class="bg-white shadow-lg">
			<nav class="container mx-auto px-4">
				<div class="flex justify-between items-center h-16">
					<a href="/" class="text-xl font-bold text-gray-800">{{ metadata.title }}</a>
					
					<!-- Mobile menu button -->
					<div class="md:hidden">
						<button type="button" id="mobile-menu-button" class="text-gray-600 hover:text-gray-900 focus:outline-none">
							<svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
							</svg>
						</button>
					</div>

					<!-- Desktop menu -->
					<div class="hidden md:flex md:items-center">
						<ul class="flex space-x-4">
						{%- for entry in collections.all | eleventyNavigation %}
							<li>
								<a href="{{ entry.url }}" 
									class="px-3 py-2 rounded-md text-sm font-medium {% if entry.url == page.url %}bg-gray-900 text-white{% else %}text-gray-600 hover:bg-gray-700 hover:text-white{% endif %}"
									{% if entry.url == page.url %}aria-current="page"{% endif %}>
									{{ entry.title }}
								</a>
							</li>
						{%- endfor %}
						</ul>
					</div>
				</div>

				<!-- Mobile menu -->
				<div id="mobile-menu" class="hidden md:hidden">
					<div class="px-2 pt-2 pb-3 space-y-1 sm:px-3">
					{%- for entry in collections.all | eleventyNavigation %}
						<a href="{{ entry.url }}" 
							class="block px-3 py-2 rounded-md text-base font-medium {% if entry.url == page.url %}bg-gray-900 text-white{% else %}text-gray-600 hover:bg-gray-700 hover:text-white{% endif %}"
							{% if entry.url == page.url %}aria-current="page"{% endif %}>
							{{ entry.title }}
						</a>
					{%- endfor %}
					</div>
				</div>
			</nav>
		</header>

		{{ collections.all | eleventyNavigation | eleventyNavigationToHtml | safe }}


		<main id="skip">
			{{ content | safe }}
		</main>

		<footer></footer>

		<!-- Current page: {{ page.url | htmlBaseUrl }} -->
		<script>
			const mobileMenuButton = document.getElementById('mobile-menu-button');
			const mobileMenu = document.getElementById('mobile-menu');

			mobileMenuButton.addEventListener('click', () => {
				const isHidden = mobileMenu.classList.contains('hidden');
				mobileMenu.classList.toggle('hidden', !isHidden);
			});
		</script>
	</body>
</html>
